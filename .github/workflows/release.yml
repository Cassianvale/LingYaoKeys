name: Release Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: '新版本号 (例如: 1.3.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Aliyun CLI
        run: |
          # 下载并安装阿里云 CLI
          Invoke-WebRequest -Uri "https://aliyuncli.alicdn.com/aliyun-cli-windows-latest-amd64.zip" -OutFile "aliyun-cli.zip"
          Expand-Archive -Path "aliyun-cli.zip" -DestinationPath "aliyun-cli"
          $env:PATH += ";$pwd\aliyun-cli"
          
          # 配置阿里云凭证
          aliyun configure set --mode AK --profile default --region cn-shanghai --language zh --access-key-id "${{ secrets.OSS_ACCESS_KEY_ID }}" --access-key-secret "${{ secrets.OSS_ACCESS_KEY_SECRET }}"
        shell: pwsh

      - name: Update Version
        run: |
          # 获取当前工作目录
          $workDir = Get-Location
          Write-Host "Current working directory: $workDir"
          
          # 1. 更新 csproj 文件版本号
          $csprojPath = Join-Path $workDir "WpfApp.csproj"
          Write-Host "Updating csproj file: $csprojPath"
          
          if (Test-Path $csprojPath) {
              $content = Get-Content $csprojPath
              $content = $content -replace '<Version>.*</Version>', "<Version>${{ github.event.inputs.version }}</Version>"
              Set-Content -Path $csprojPath -Value $content -Encoding UTF8
              Write-Host "Updated version in csproj file"
          } else {
              Write-Error "csproj file not found at: $csprojPath"
              exit 1
          }

          # 2. 创建 version.json
          $versionJsonPath = Join-Path $workDir "version.json"
          $versionJson = @{
              version = "${{ github.event.inputs.version }}"
              releaseNotes = "Version ${{ github.event.inputs.version }} update"
              downloadUrl = "https://github.com/Cassianvale/LingYaoKeys/releases/download/v${{ github.event.inputs.version }}/LingYaoKeys-${{ github.event.inputs.version }}.zip"
          } | ConvertTo-Json
          Set-Content -Path $versionJsonPath -Value $versionJson -Encoding UTF8
          Write-Host "Created version.json at: $versionJsonPath"

          # 3. 上传到阿里云 OSS
          Write-Host "Uploading to OSS..."
          Write-Host "Source file: $versionJsonPath"
          Write-Host "Destination: oss://lykeys-remote/version.json"
          & aliyun.exe oss cp "$versionJsonPath" "oss://lykeys-remote/version.json" --force
          if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to upload to OSS"
              exit 1
          }
          Write-Host "Upload completed successfully"
        shell: pwsh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 