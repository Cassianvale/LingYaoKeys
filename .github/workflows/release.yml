name: Release Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: '新版本号 (例如: 1.1.0)'
        required: true
        type: string
      releaseNotes:
        description: '版本更新内容 (支持 Markdown 格式)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    
    env:
      Project_Path: WpfApp.csproj
      Configuration: Release
      OSS_BUCKET: lykeys-remote
      EXE_FILE: 灵曜按键.exe
      ZIP_FILE: LingYaoKeys_v${{ github.event.inputs.version }}_windows_x64.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Update Version
        run: |
          $content = Get-Content $env:Project_Path
          $content = $content -replace '<Version>.*</Version>', "<Version>${{ github.event.inputs.version }}</Version>"
          Set-Content -Path $env:Project_Path -Value $content -Encoding UTF8
        shell: pwsh

      - name: Build and Publish
        run: |
          dotnet publish $env:Project_Path -c $env:Configuration -p:Platform=x64 --output publish
          
          # 验证发布文件
          $exePath = "publish\$env:EXE_FILE"
          if (Test-Path $exePath) {
              $fileInfo = Get-Item $exePath
              Write-Host "Published file size: $($fileInfo.Length) bytes"
              
              # 创建发布包
              Compress-Archive -Path "publish\*" -DestinationPath $env:ZIP_FILE -Force
              Write-Host "Created release package: $env:ZIP_FILE"
          } else {
              Write-Error "Published file not found: $exePath"
              exit 1
          }
        shell: pwsh

      - name: Upload to OSS
        run: |
          # 下载并配置阿里云 CLI
          Invoke-WebRequest -Uri "https://aliyuncli.alicdn.com/aliyun-cli-windows-latest-amd64.zip" -OutFile "aliyun-cli.zip"
          Expand-Archive -Path "aliyun-cli.zip" -DestinationPath "aliyun-cli"
          $env:PATH += ";$pwd\aliyun-cli"
          aliyun configure set --mode AK --profile default --region cn-shanghai --language zh --access-key-id "${{ secrets.OSS_ACCESS_KEY_ID }}" --access-key-secret "${{ secrets.OSS_ACCESS_KEY_SECRET }}"
          
          # 上传发布文件到 OSS
          aliyun oss cp $env:ZIP_FILE "oss://$env:OSS_BUCKET/releases/v${{ github.event.inputs.version }}/$env:ZIP_FILE" --force
          
          # 创建并上传 version.json
          @{
              version = "v${{ github.event.inputs.version }}"
              downloadUrl = "https://lykeys-remote.oss-cn-shanghai.aliyuncs.com/releases/v${{ github.event.inputs.version }}/$env:ZIP_FILE"
              githubUrl = "https://github.com/Cassianvale/LingYaoKeys/releases/download/v${{ github.event.inputs.version }}/$env:ZIP_FILE"
              releaseDate = [DateTime]::UtcNow.ToString("yyyy-MM-dd'T'HH:mm:ss'Z'")
              minVersion = "1.0.0"
              forceUpdate = $false
          } | ConvertTo-Json | Set-Content -Path "version.json" -Encoding UTF8
          
          # 上传 version.json 到 OSS
          aliyun oss cp version.json oss://$env:OSS_BUCKET/version.json --force
        shell: pwsh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            ${{ github.event.inputs.releaseNotes }}
            
            ## 下载地址
            - [GitHub Release](https://github.com/Cassianvale/LingYaoKeys/releases/download/v${{ github.event.inputs.version }}/${{ env.ZIP_FILE }})
            - [阿里云 OSS](https://lykeys-remote.oss-cn-shanghai.aliyuncs.com/releases/v${{ github.event.inputs.version }}/${{ env.ZIP_FILE }})
          draft: false
          prerelease: false
          files: |
            ${{ env.ZIP_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

