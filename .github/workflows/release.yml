name: Release Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: '新版本号 (例如: 1.3.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    
    env:
      Project_Path: WpfApp.csproj
      Configuration: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Update Version
        run: |
          $content = Get-Content $env:Project_Path
          $content = $content -replace '<Version>.*</Version>', "<Version>${{ github.event.inputs.version }}</Version>"
          Set-Content -Path $env:Project_Path -Value $content -Encoding UTF8
        shell: pwsh

      - name: Build and Publish
        run: |
          dotnet publish $env:Project_Path -c $env:Configuration -p:Platform=x64 --output publish
          
          # 验证发布文件
          $exePath = "publish\LingYaoKeys.exe"
          if (Test-Path $exePath) {
              $fileInfo = Get-Item $exePath
              Write-Host "Published file size: $($fileInfo.Length) bytes"
          } else {
              Write-Error "Published file not found: $exePath"
              exit 1
          }
        shell: pwsh

      - name: Upload to OSS
        run: |
          # 下载并配置阿里云 CLI
          Invoke-WebRequest -Uri "https://aliyuncli.alicdn.com/aliyun-cli-windows-latest-amd64.zip" -OutFile "aliyun-cli.zip"
          Expand-Archive -Path "aliyun-cli.zip" -DestinationPath "aliyun-cli"
          $env:PATH += ";$pwd\aliyun-cli"
          aliyun configure set --mode AK --profile default --region cn-shanghai --language zh --access-key-id "${{ secrets.OSS_ACCESS_KEY_ID }}" --access-key-secret "${{ secrets.OSS_ACCESS_KEY_SECRET }}"
          
          # 创建并上传 version.json
          @{
              version = "${{ github.event.inputs.version }}"
              releaseNotes = "Version ${{ github.event.inputs.version }} update"
              downloadUrl = "https://github.com/Cassianvale/LingYaoKeys/releases/download/v${{ github.event.inputs.version }}/LingYaoKeys.exe"
          } | ConvertTo-Json | Set-Content -Path "version.json" -Encoding UTF8
          
          aliyun oss cp version.json oss://lykeys-remote/version.json --force
        shell: pwsh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          files: |
            publish/LingYaoKeys.exe
            version.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 