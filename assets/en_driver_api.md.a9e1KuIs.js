import{_ as i,c as a,o as s,ag as e}from"./chunks/framework.C48t5LJr.js";const u=JSON.parse('{"title":"Driver API Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"en/driver/api.md","filePath":"en/driver/api.md","lastUpdated":1742393041000}'),d={name:"en/driver/api.md"};function n(l,t,r,o,h,p){return s(),a("div",null,t[0]||(t[0]=[e(`<h1 id="driver-api-documentation" tabindex="-1">Driver API Documentation <a class="header-anchor" href="#driver-api-documentation" aria-label="Permalink to &quot;Driver API Documentation&quot;">​</a></h1><h2 id="api-list" tabindex="-1">API List <a class="header-anchor" href="#api-list" aria-label="Permalink to &quot;API List&quot;">​</a></h2><h3 id="driver-management-apis" tabindex="-1">Driver Management APIs <a class="header-anchor" href="#driver-management-apis" aria-label="Permalink to &quot;Driver Management APIs&quot;">​</a></h3><div class="driver-api-table"><table tabindex="0"><thead><tr><th>Function Name</th><th>Parameters</th><th>Return Type</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>LoadNTDriver</td><td>char* lpszDriverName, char* lpszDriverPath</td><td>BOOL</td><td>Load NT driver</td><td>LoadNTDriver(&quot;lykeys&quot;, &quot;lykeys.sys&quot;)</td></tr><tr><td>UnloadNTDriver</td><td>char* szSvrName</td><td>BOOL</td><td>Unload NT driver</td><td>UnloadNTDriver(&quot;lykeys&quot;)</td></tr><tr><td>SetHandle</td><td>void</td><td>BOOL</td><td>Set driver handle</td><td>SetHandle()</td></tr><tr><td>GetDriverHandle</td><td>void</td><td>HANDLE</td><td>Get driver handle</td><td>GetDriverHandle()</td></tr><tr><td>GetDriverStatus</td><td>void</td><td>DEVICE_STATUS</td><td>Get driver status</td><td>GetDriverStatus()</td></tr><tr><td>GetLastCheckTime</td><td>void</td><td>ULONGLONG</td><td>Get last check time</td><td>GetLastCheckTime()</td></tr></tbody></table></div><h3 id="keyboard-operation-apis" tabindex="-1">Keyboard Operation APIs <a class="header-anchor" href="#keyboard-operation-apis" aria-label="Permalink to &quot;Keyboard Operation APIs&quot;">​</a></h3><div class="keyboard-api-table"><table tabindex="0"><thead><tr><th>Function Name</th><th>Parameters</th><th>Return Type</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>KeyDown</td><td>USHORT VirtualKey</td><td>void</td><td>Simulate key down</td><td>KeyDown(0x41) // Press A</td></tr><tr><td>KeyUp</td><td>USHORT VirtualKey</td><td>void</td><td>Simulate key up</td><td>KeyUp(0x41) // Release A</td></tr></tbody></table></div><h3 id="mouse-operation-apis" tabindex="-1">Mouse Operation APIs <a class="header-anchor" href="#mouse-operation-apis" aria-label="Permalink to &quot;Mouse Operation APIs&quot;">​</a></h3><div class="mouse-api-table"><table tabindex="0"><thead><tr><th>Function Name</th><th>Parameters</th><th>Return Type</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>MouseMoveRELATIVE</td><td>LONG dx, LONG dy</td><td>void</td><td>Mouse relative move</td><td>MouseMoveRELATIVE(10, 20)</td></tr><tr><td>MouseMoveABSOLUTE</td><td>LONG dx, LONG dy</td><td>void</td><td>Mouse absolute move</td><td>MouseMoveABSOLUTE(100, 200)</td></tr><tr><td>MouseLeftButtonDown</td><td>void</td><td>void</td><td>Left button down</td><td>MouseLeftButtonDown()</td></tr><tr><td>MouseLeftButtonUp</td><td>void</td><td>void</td><td>Left button up</td><td>MouseLeftButtonUp()</td></tr><tr><td>MouseRightButtonDown</td><td>void</td><td>void</td><td>Right button down</td><td>MouseRightButtonDown()</td></tr><tr><td>MouseRightButtonUp</td><td>void</td><td>void</td><td>Right button up</td><td>MouseRightButtonUp()</td></tr><tr><td>MouseMiddleButtonDown</td><td>void</td><td>void</td><td>Middle button down</td><td>MouseMiddleButtonDown()</td></tr><tr><td>MouseMiddleButtonUp</td><td>void</td><td>void</td><td>Middle button up</td><td>MouseMiddleButtonUp()</td></tr><tr><td>MouseXButton1Down</td><td>void</td><td>void</td><td>X1 button down</td><td>MouseXButton1Down()</td></tr><tr><td>MouseXButton1Up</td><td>void</td><td>void</td><td>X1 button up</td><td>MouseXButton1Up()</td></tr><tr><td>MouseXButton2Down</td><td>void</td><td>void</td><td>X2 button down</td><td>MouseXButton2Down()</td></tr><tr><td>MouseXButton2Up</td><td>void</td><td>void</td><td>X2 button up</td><td>MouseXButton2Up()</td></tr><tr><td>MouseWheelUp</td><td>USHORT wheelDelta</td><td>void</td><td>Wheel up</td><td>MouseWheelUp(120)</td></tr><tr><td>MouseWheelDown</td><td>USHORT wheelDelta</td><td>void</td><td>Wheel down</td><td>MouseWheelDown(120)</td></tr></tbody></table></div><h2 id="usage-guide" tabindex="-1">Usage Guide <a class="header-anchor" href="#usage-guide" aria-label="Permalink to &quot;Usage Guide&quot;">​</a></h2><h3 id="initialize-driver" tabindex="-1">Initialize Driver <a class="header-anchor" href="#initialize-driver" aria-label="Permalink to &quot;Initialize Driver&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Load driver</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoadNTDriver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lykeys&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lykeys.sys&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Set handle</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check status</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DEVICE_STATUS status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetDriverStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DEVICE_STATUS_READY) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Driver is ready</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="keyboard-operation" tabindex="-1">Keyboard Operation <a class="header-anchor" href="#keyboard-operation" aria-label="Permalink to &quot;Keyboard Operation&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Press A key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KeyDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">41</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Wait for a while</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Release A key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KeyUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">41</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="mouse-operation" tabindex="-1">Mouse Operation <a class="header-anchor" href="#mouse-operation" aria-label="Permalink to &quot;Mouse Operation&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Move mouse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MouseMoveRELATIVE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Click left button</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MouseLeftButtonDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MouseLeftButtonUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Scroll mouse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MouseWheelUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><h3 id="thread-safety" tabindex="-1">Thread Safety <a class="header-anchor" href="#thread-safety" aria-label="Permalink to &quot;Thread Safety&quot;">​</a></h3><ul><li>All APIs are thread-safe</li><li>No additional synchronization needed in multi-threaded environment</li><li>Recommended to load/unload driver in main thread</li></ul><h3 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">​</a></h3><ul><li>Check function return values</li><li>Use GetLastError to get error codes</li><li>Implement error retry mechanism</li></ul><h3 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h3><ul><li>Set reasonable key intervals</li><li>Avoid frequent calls</li><li>Release resources timely</li></ul>`,22)]))}const c=i(d,[["render",n]]);export{u as __pageData,c as default};
