import{_ as i,c as t,o,ag as a}from"./chunks/framework.C48t5LJr.js";const h=JSON.parse('{"title":"Feature Description","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/features.md","filePath":"en/guide/features.md","lastUpdated":1742393041000}'),r={name:"en/guide/features.md"};function l(n,e,s,d,u,c){return o(),t("div",null,e[0]||(e[0]=[a('<h1 id="feature-description" tabindex="-1">Feature Description <a class="header-anchor" href="#feature-description" aria-label="Permalink to &quot;Feature Description&quot;">​</a></h1><h2 id="basic-features" tabindex="-1">Basic Features <a class="header-anchor" href="#basic-features" aria-label="Permalink to &quot;Basic Features&quot;">​</a></h2><h3 id="global-hotkeys" tabindex="-1">Global Hotkeys <a class="header-anchor" href="#global-hotkeys" aria-label="Permalink to &quot;Global Hotkeys&quot;">​</a></h3><ul><li>Support for custom global hotkey combinations</li><li>Support for single keys and key combinations</li><li>Hotkey conflict detection</li></ul><h3 id="side-button-scroll-wheel-triggers" tabindex="-1">Side Button &amp; Scroll Wheel Triggers <a class="header-anchor" href="#side-button-scroll-wheel-triggers" aria-label="Permalink to &quot;Side Button &amp; Scroll Wheel Triggers&quot;">​</a></h3><ul><li>Support for mouse side button triggers</li><li>Support for scroll wheel up/down triggers</li><li>Customizable hotkey trigger behavior</li><li>Support for combination trigger modes</li></ul><h3 id="independent-key-intervals" tabindex="-1">Independent Key Intervals <a class="header-anchor" href="#independent-key-intervals" aria-label="Permalink to &quot;Independent Key Intervals&quot;">​</a></h3><ul><li>Each key can have its own independent interval time</li><li>Support for millisecond-level precise control</li><li>Support for dynamic interval adjustment</li></ul><h3 id="window-handle-detection" tabindex="-1">Window Handle Detection <a class="header-anchor" href="#window-handle-detection" aria-label="Permalink to &quot;Window Handle Detection&quot;">​</a></h3><ul><li>Intelligent target window identification with automatic polling and window status monitoring</li><li>Support for automatic reacquisition of previous handles after window restart</li><li>Support for manual window specification, after which hotkeys will only trigger for the specified window</li></ul><h3 id="sequence-press-mode" tabindex="-1">Sequence/Press Mode <a class="header-anchor" href="#sequence-press-mode" aria-label="Permalink to &quot;Sequence/Press Mode&quot;">​</a></h3><ul><li>Support for key sequence mode toggle trigger</li><li>Support for press mode continuous trigger when held down</li></ul><h3 id="coordinate-movement" tabindex="-1">Coordinate Movement <a class="header-anchor" href="#coordinate-movement" aria-label="Permalink to &quot;Coordinate Movement&quot;">​</a></h3><ul><li>Support for coordinate positioning</li><li>Support for absolute mouse movement to corresponding coordinates</li><li>Real-time coordinate changes in edit mode</li><li>Intelligent DPI scaling handling</li></ul><h3 id="voice-prompts" tabindex="-1">Voice Prompts <a class="header-anchor" href="#voice-prompts" aria-label="Permalink to &quot;Voice Prompts&quot;">​</a></h3><ul><li>Support for voice prompt toggle</li><li>Customizable hotkey trigger sound effects</li><li>Support for volume adjustment, audio device not mandatory</li><li>Support for silent mode</li></ul><h3 id="anti-sticking-mode" tabindex="-1">Anti-Sticking Mode <a class="header-anchor" href="#anti-sticking-mode" aria-label="Permalink to &quot;Anti-Sticking Mode&quot;">​</a></h3><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>This feature is only for specific gaming scenarios. If it affects your gaming experience, please turn it off. Key speeds above 200-300 per second may cause key response delay or sticking movement. <em><strong>Reduce Sticking feature ON (default)</strong></em>: Average key speed tested at 120+, suitable for specific gaming scenarios <em><strong>Reduce Sticking feature OFF</strong></em>: Removes key speed limits with average speed of 320+, suitable for normal scenarios</p></div><ul><li>Support for Normal/Reduce Sticking toggle</li><li>Optimized for gaming scenarios</li></ul><h3 id="key-sorting" tabindex="-1">Key Sorting <a class="header-anchor" href="#key-sorting" aria-label="Permalink to &quot;Key Sorting&quot;">​</a></h3><ul><li>Key/coordinate lists support drag-and-drop sorting with real-time sequence changes</li><li>Support for batch operations</li></ul><h3 id="floating-window-display" tabindex="-1">Floating Window Display <a class="header-anchor" href="#floating-window-display" aria-label="Permalink to &quot;Floating Window Display&quot;">​</a></h3><ul><li>Floating window status synchronized with hotkey activation status in real-time</li><li>Support for keeping the floating window on top</li><li>Support for right-click menu display, double-click to show main program</li><li>Support for position memory</li></ul><h3 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h3><ul><li>Support for import/export</li><li>Support for online update checks</li><li>All configurations automatically saved</li></ul><h3 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">​</a></h3><ul><li>Support for debug mode</li><li>Support for global hardware acceleration and rendering optimization</li><li>Support for PerMonitorV2 high DPI awareness</li></ul><h2 id="advanced-features" tabindex="-1">Advanced Features <a class="header-anchor" href="#advanced-features" aria-label="Permalink to &quot;Advanced Features&quot;">​</a></h2><h3 id="driver-management" tabindex="-1">Driver Management <a class="header-anchor" href="#driver-management" aria-label="Permalink to &quot;Driver Management&quot;">​</a></h3><ul><li>Support for driver hot-swapping</li><li>Support for driver status monitoring</li></ul><h3 id="security-protection" tabindex="-1">Security Protection <a class="header-anchor" href="#security-protection" aria-label="Permalink to &quot;Security Protection&quot;">​</a></h3><ul><li>Support for anti-Hook protection</li><li>Support for memory protection</li><li>Support for driver signature verification</li><li>Support for exception handling</li></ul><h3 id="system-compatibility" tabindex="-1">System Compatibility <a class="header-anchor" href="#system-compatibility" aria-label="Permalink to &quot;System Compatibility&quot;">​</a></h3><ul><li>Support for 32-bit/64-bit systems</li><li>Support for USB/PS2 devices</li><li>Support for multiple system versions</li><li>Support for high DPI displays</li></ul>',34)]))}const m=i(r,[["render",l]]);export{h as __pageData,m as default};
