import{_ as i,a as t,b as a,c as n}from"./chunks/window-selector.BosB95P2.js";import{_ as o,c as s,o as r,ag as l}from"./chunks/framework.C48t5LJr.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"LingYaoKeys","text":"An elegant and powerful keyboard tool for smoother, more natural operations","tagline":"Developed with .NET8.0+WPF, perfectly combining modern UI with powerful functionality","image":{"src":"/logo.png","alt":"LingYaoKeys"},"actions":[{"theme":"brand","text":"About Project","link":"/en/guide/index"},{"theme":"alt","text":"Direct Download","link":"https://github.com/Cassianvale/LingYaoKeys/releases/latest"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/Cassianvale/LingYaoKeys"},{"theme":"alt","text":"FAQ","link":"/en/faq"}]},"features":[{"icon":"üéØ","title":"Elegant Interaction","details":"Supports drag-and-drop sorting, floating status display, voice feedback for more intuitive and natural operations","linkText":"Feature Details","link":"/en/guide/features"},{"icon":"‚ö°","title":"Powerful Functionality","details":"Global hotkeys, coordinate movement, side button & scroll wheel triggers, independent interval control, window handle detection to meet professional needs","linkText":"Usage Instructions","link":"/en/guide/tutorial"},{"icon":"üõ°","title":"Safe and Reliable","details":"Implemented with kernel-level driver, comprehensive anti-hook and memory protection mechanisms, supports offline operation, ensures stable and secure applications, provides open driver files and interface documentation for developers","linkText":"Driver Documentation","link":"/en/driver/opensource"},{"icon":"üõ†Ô∏è","title":"Stable Compatibility","details":"Supports 32-bit/64-bit systems, compatible with Win10/Win11, supports driver hot-swapping, traceless uninstallation","linkText":"System Requirements","link":"/en/guide/#system-requirements"},{"icon":"üîÑ","title":"Flexible Configuration","details":"Supports configuration import/export, online updates, debug mode for easy personalization"},{"icon":"üé®","title":"Elegant Design","details":"Adopts MVVM architecture, modern UI design, smooth animation effects"}]},"headers":[],"relativePath":"en/index.md","filePath":"en/index.md","lastUpdated":1742378511000}'),c={name:"en/index.md"};function d(p,e,m,g,u,v){return r(),s("div",null,e[0]||(e[0]=[l('<h2 class="main-title">Software Interface Preview</h2><div class="preview-section"><h3>Feature Demonstration</h3><p>Real operation demonstration showcasing the smooth user experience and core functionality of LingYaoKeys. LingYaoKeys provides the ultimate user experience and professional-grade key tools to make your operations more efficient.</p><div class="preview-image-wrapper wide gif-container"><img src="'+i+'" alt="LingYaoKeys Operation Demo" class="preview-image gif-image"><div class="image-caption">Software actual operation demonstration</div></div></div><div class="preview-container"><div class="preview-section"><h3>Main Interface - Function Switches and Key Settings</h3><p>LingYaoKeys provides an intuitive user interface with one-click switches, customizable interval times, and multiple trigger modes. Through a clean interface design, you can easily control every functional detail.</p><div class="preview-images"><div class="preview-image-wrapper"><img src="'+t+'" alt="LingYaoKeys Main Interface" class="preview-image"><div class="image-caption">Main interface showing function switches and basic settings</div></div><div class="preview-image-wrapper"><img src="'+a+'" alt="LingYaoKeys Coordinate Display Interface" class="preview-image"><div class="image-caption">Real-time display of coordinate positions and trigger status</div></div></div></div><div class="preview-section"><h3>Window Handle Selector</h3><p>Precisely locate application windows with support for multiple identification methods and automatic refresh functionality. Quickly lock target windows, obtain accurate handle information, and achieve precise operation control.</p><div class="preview-image-wrapper wide"><img src="'+n+'" alt="Window Handle Selector" class="preview-image"><div class="image-caption">Easily select target windows and obtain handle information</div></div></div></div>',3)]))}const y=o(c,[["render",d]]);export{w as __pageData,y as default};
